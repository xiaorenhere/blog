(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{472:function(t,s,n){"use strict";n.r(s);var e=n(3),a=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"热点项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#热点项目"}},[t._v("#")]),t._v(" 热点项目")]),t._v(" "),s("p",[s("strong",[t._v("1.1 介绍")])]),t._v(" "),s("p",[t._v("这是一个可以获取各⼤平台(例如：微博、抖音、bilibili等)的热搜榜单数据，显示实时的热搜榜单，话题排⾏，热度和刷新时间，可以适配PC端和各种移动端设备，能够切换夜间模式。")]),t._v(" "),s("p",[s("strong",[t._v("开发时间")]),t._v("：（一个月）")]),t._v(" "),s("p",[s("strong",[t._v("使用的（前端）技术栈")]),t._v("：vue3框架、vite打包工具、CSS预处理器sass、elementPlusUI组件库、vueRouter。npm包管理器、ESLint和Prettier格式化代码。")]),t._v(" "),s("p",[s("strong",[t._v("1.2 项目亮点")])]),t._v(" "),s("p",[s("strong",[t._v("1.2.1 懒加载。")])]),t._v(" "),s("p",[t._v("使用IntersectionObserver API来检测组件是否进入视口。当组件进入视口时，设置isVisible为true")]),t._v(" "),s("p",[s("strong",[t._v("1.2.2 适配问题。")])]),t._v(" "),s("p",[t._v("通过媒体查询，设置在不同设备上有不同的效果显示。")]),t._v(" "),s("p",[s("strong",[t._v("1.2.3 黑夜模式切换。")])]),t._v(" "),s("p",[t._v("可以通过定义一个响应式变量isNightMode")]),t._v(" "),s("p",[t._v("创建一个方法toggleMode来切换这个变量的值，实现黑夜模式和白天模式的切换。")]),t._v(" "),s("p",[t._v("通过:class指令动态应用不同的样式类，当isNightMode为true时，页面应用黑夜模式样式，否则应用白天模式样式")]),t._v(" "),s("p",[s("strong",[t._v("1.3 打包上线")])]),t._v(" "),s("p",[s("strong",[t._v("1.3.1 vite打包配置文件")])]),t._v(" "),s("p",[t._v("规范配置，将不同类型的文件组织到不同的目录，简单压缩代码，去除了console语句")]),t._v(" "),s("p",[s("strong",[t._v("1.4 运维Nginx")])]),t._v(" "),s("p",[s("strong",[t._v("1.4.1 学会使用。")])]),t._v(" "),s("p",[t._v("安装、配置文件")]),t._v(" "),s("p",[s("strong",[t._v("1.4.2 nginx.config配置文件理解。")])]),t._v(" "),s("p",[t._v("http模块")]),t._v(" "),s("p",[t._v("server：")]),t._v(" "),s("p",[t._v("1、listen：nginx监听的端口")]),t._v(" "),s("p",[t._v("1、server_name：nginx服务的ip地址或者域名")]),t._v(" "),s("p",[t._v("3、location：配置路由访问信息")]),t._v(" "),s("p",[s("strong",[t._v("1.4.3 怎么做限流")])]),t._v(" "),s("p",[t._v("在 Nginx 配置中使用的限流是漏桶算法（Leaky Bucket Algorithm）的实现。漏桶算法是一种网络流量整形（Traffic Shaping）技术，用于控制数据的传输速率，防止网络拥塞。")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$binary_remote_addr 是 Nginx 内置变量，代表客户端 IP 地址的二进制形式。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#zone=my_limit:10m 定义了共享内存区域的名称 my_limit 和大小 10m（10 兆字节）。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#rate=1r/s 定义了请求的速率，这里是每秒一个请求。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit_req_zone")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$binary_remote_addr")]),t._v(" zone=my_limit:10m rate=1r/s")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit_req")]),t._v(" zone=my_limit burst=5 nodelay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:8080/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例代理配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#burst 参数定义了突发请求的数量，这里是 5。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nodelay 参数用于在请求数超过限制时立即返回错误响应而不是排队等待。")]),t._v("\n")])])]),s("p",[s("strong",[t._v("1.4.4 nginx命令（优雅）")])]),t._v(" "),s("p",[t._v("（Windows 系统）")]),t._v(" "),s("p",[t._v("service nginx start   # 在使用 System V init 的系统中")]),t._v(" "),s("p",[t._v("systemctl start nginx # 在使用 systemd 的系统中")]),t._v(" "),s("p",[s("strong",[t._v("优雅重启")])]),t._v(" "),s("p",[t._v("nginx -s HUP")]),t._v(" "),s("p",[s("strong",[t._v("优雅停止")])]),t._v(" "),s("p",[t._v("nginx -s QUIT")]),t._v(" "),s("p",[t._v("（ Ubuntu 系统）")]),t._v(" "),s("p",[t._v("安装nginx")]),t._v(" "),s("p",[t._v("sudo apt install nginxs")]),t._v(" "),s("p",[t._v("sudo systemctl start nginx")]),t._v(" "),s("p",[t._v("sudo systemctl stop nginx")]),t._v(" "),s("p",[t._v("sudo systemctl restart nginx")]),t._v(" "),s("p",[s("strong",[t._v("1.5 优化")])]),t._v(" "),s("p",[s("strong",[t._v("1.5.1 产品优化")])]),t._v(" "),s("ol",[s("li",[t._v("HTML优化：压缩HTML代码、删除注释（使用插件）、使用语义化标签、削减DOM数量和层级数量，坚持 DOM 元素简洁和扁平化的层级、减少重排重绘。")]),t._v(" "),s("li",[t._v("JavaScript优化：减少DOM访问、节流与防抖")]),t._v(" "),s("li",[t._v("css优化：尽量少用@import、.避免！important，可以选择其他选择器、CSS文件压缩")]),t._v(" "),s("li",[t._v("图片优化：采用svg图片或者字体图标、")]),t._v(" "),s("li",[t._v("webpack/vite构建优化：多线程、缓存加载、热更新、缩小css代码、缩小js代码、删除无用代码、使用 webpack-bundle-analyzer 来查看打包后的 bundle 文件的体积、Gzip压缩、nginx也要开启、对于一些小图片，可以转成base64编码、将同类型文件打包在相同文件夹下。")])]),t._v(" "),s("p",[s("strong",[t._v("1.5.2 Gzip压缩")])]),t._v(" "),s("p",[t._v("Nginx服务器只需要配置：")]),t._v(" "),s("p",[t._v("// 静态加载本地的gz文件，需要在nginx上安装http_gzip_static_module模块")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// nginx配置\ngzip on;\ngzip_static on;\ngzip_comp_level 4;\ngzip_types text/plain text/html text/css application/x-javascript text/xml application/xml application/xml\n")])])]),s("p",[s("strong",[t._v("在webpack中可以使用compression-webpack-plugin来实现")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const CompressionPlugin = require('compression-webpack-plugin');\n\nmodule.exports = {\n  // ...其他配置\n  plugins: [\n    new CompressionPlugin({\n      // 匹配需要进行Gzip压缩的文件类型\n      test: /\\.(js|css|html|svg)$/,\n      // 只有文件大小大于等于该值时才会生成Gzip文件\n      threshold: 10240,\n    }),\n  ],\n};\n")])])]),s("p",[s("strong",[t._v("在vite中使用vite-plugin-compression来实现")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import compressPlugin from 'vite-plugin-compression';\n\nexport default defineConfig({\n  plugins: [\n    compressPlugin({\n      ext: '.gz',\n      algorithm: 'gzip',\n      deleteOriginFile: false,\n    }),\n  ],\n});\n")])])]),s("p",[s("strong",[t._v("1.5.3 CDN加速")])]),t._v(" "),s("p",[t._v("CDN（content delivery network）即内容分发网络，通过在各个地方部署 CDN 镜像服务器，并复制源服务器的应用内容，让用户可以从最合适的镜像服务器中获取资源内容。")]),t._v(" "),s("p",[t._v("使用组件的cdn、vue的cdn使得用户访问的时候速度加快。")])])}),[],!1,null,null,null);s.default=a.exports}}]);